diff --git a/proton b/proton
index ad8efaf..5f964a5 100755
--- a/proton
+++ b/proton
@@ -332,67 +332,23 @@ def set_dir_casefold_bit(dir_path):
 class Proton:
     def __init__(self, base_dir):
         self.base_dir = base_dir + "/"
-        self.dist_dir = self.path("files/")
-        self.bin_dir = self.path("files/bin/")
-        self.lib_dir = self.path("files/lib/")
-        self.lib64_dir = self.path("files/lib64/")
-        self.fonts_dir = self.path("files/share/fonts/")
-        self.wine_fonts_dir = self.path("files/share/wine/fonts/")
-        self.wine_inf = self.path("files/share/wine/wine.inf")
+        self.dist_dir = self.base_dir
+        self.bin_dir = self.path("bin/")
+        self.lib_dir = self.path("lib32/")
+        self.lib64_dir = self.path("lib/")
+        self.fonts_dir = self.path("share/fonts/")
+        self.wine_fonts_dir = self.path("share/wine/fonts/")
+        self.wine_inf = self.path("share/wine/wine.inf")
         self.version_file = self.path("version")
-        self.default_pfx_dir = self.path("files/share/default_pfx/")
+        self.default_pfx_dir = self.path("share/default_pfx/")
         self.user_settings_file = self.path("user_settings.py")
         self.wine_bin = self.bin_dir + "wine"
         self.wine64_bin = self.bin_dir + "wine64"
         self.wineserver_bin = self.bin_dir + "wineserver"
-        self.dist_lock = FileLock(self.path("dist.lock"), timeout=-1)
 
     def path(self, d):
         return self.base_dir + d
 
-    def cleanup_legacy_dist(self):
-        old_dist_dir = self.path("dist/")
-        if file_exists(old_dist_dir, follow_symlinks=True):
-            with self.dist_lock:
-                if file_exists(old_dist_dir, follow_symlinks=True):
-                    shutil.rmtree(old_dist_dir)
-
-    def do_steampipe_fixups(self):
-        fixups_json = self.path("steampipe_fixups.json")
-        fixups_mtime = self.path("files/steampipe_fixups_mtime")
-
-        if file_exists(fixups_json, follow_symlinks=True):
-            with self.dist_lock:
-                import steampipe_fixups
-
-                current_fixup_mtime = None
-                if file_exists(fixups_mtime, follow_symlinks=True):
-                    with open(fixups_mtime, "r") as f:
-                        current_fixup_mtime = f.readline().strip()
-
-                new_fixup_mtime = getmtimestr(fixups_json)
-
-                if current_fixup_mtime != new_fixup_mtime:
-                    result_code = steampipe_fixups.do_restore(self.base_dir, fixups_json)
-
-                    if result_code == 0:
-                        with open(fixups_mtime, "w") as f:
-                            f.write(new_fixup_mtime + "\n")
-
-    def missing_default_prefix(self):
-        '''Check if the default prefix dir is missing. Returns true if missing, false if present'''
-        return not os.path.isdir(self.default_pfx_dir)
-
-    def make_default_prefix(self):
-        with self.dist_lock:
-            local_env = dict(g_session.env)
-            if self.missing_default_prefix():
-                #make default prefix
-                local_env["WINEPREFIX"] = self.default_pfx_dir
-                local_env["WINEDEBUG"] = "-all"
-                g_session.run_proc([self.wine_bin, "wineboot"], local_env)
-                g_session.run_proc([self.wineserver_bin, "-w"], local_env)
-
 class CompatData:
     def __init__(self, compatdata):
         self.base_dir = compatdata + "/"
@@ -1361,18 +1317,12 @@ if __name__ == "__main__":
 
     g_proton = Proton(os.path.dirname(sys.argv[0]))
 
-    g_proton.cleanup_legacy_dist()
-    g_proton.do_steampipe_fixups()
-
     g_compatdata = CompatData(os.environ["STEAM_COMPAT_DATA_PATH"])
 
     g_session = Session()
 
     g_session.init_wine()
 
-    if g_proton.missing_default_prefix():
-        g_proton.make_default_prefix()
-
     g_session.init_session(sys.argv[1] != "runinprefix")
 
     #determine mode
